Grammar = { Statement | Definition | Scope | Namespace } ;

Statement = [ StatementAssignment | VariableDefinition ], ";" ;

Definition = UnionDefinition | StructDefinition | FunctionDefinition | ErrorDefinition ;

StatementAssignment = Expression, "=", RValue ;

RValue = Allocation | Expression ;
    
Allocation = "alloc", AllocationDefinition ;

AllocationDefinition = VariableDefinitionLValue, [ ":", Expression ] ;

BuiltinDatatype = "int" | "i8" | "i16" | "i32" | "i64" | "u8" | "u16" | "u32" | "u64" | "f32" | "f64" | "error" ;

Datatype = Identifier | BuiltinDatatype ;

VariableDefinition = VariableDefinitionLValue, [ "=", RValue ] ;

VariableDefinitionLValue = Datatype, [ Decorator ], Identifier ;

Decorator = { "[", (Expression | Qualifier), "]" }, { "^" } ;

Qualifier = "const" | "embed" ;

Identifier = Letter, { Letter | Digit | "_" } ;

UnionDefinition = "def", "union", StructUnionBody ;

StructDefinition = "def", [ "struct" ], StructUnionBody ;

StructUnionBody = "{", { VariableDefinition, ";" }, "}" ;

ErrorDefinition = "error", "{", { Identifier, ";" }, "}" ;

FunctionDefinition = "fcn", "(", { VariableDefinitionLValue }, ")", [ "->", Datatype ], Scope ;

Namespace = "namespace", Identifier, Scope ;

Scope = "{", { Statement }, "}" ;



Expression = Term, { ( "+" | "-" ), Term } ;

Term = Factor, { ( "*" | "/" | "%" ), Factor } ;

Factor = ( UnaryOperator | Literal | Identifier | FunctionCall | "(", Expression, ")" ) ;

UnaryOperator = "+" | "-" | "!" | "~" ;

Literal = IntegerLiteral | FloatingPointLiteral | StringLiteral | InternalConstant ;

IntegerLiteral = Digit, { Digit } ;

FloatingPointLiteral = IntegerLiteral, ".", { Digit } ;

StringLiteral = '"', { Letter | Digit | " " | "\n" | "\t" }, '"' ;

InternalConstant = "true" | "false" | "null" ;

FunctionCall = Identifier, "(", { Expression, { [ ",", Expression ] } }, ")" ;



Letter = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" |
         "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" |
         "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" |
         "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" ;

Digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
